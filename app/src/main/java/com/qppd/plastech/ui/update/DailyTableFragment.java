package com.qppd.plastech.ui.update;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import com.qppd.plastech.R;
import com.evrencoskun.tableview.TableView;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.qppd.plastech.data.SharedRepository;

public class DailyTableFragment extends Fragment {
    private TableView tableView;
    private final SharedRepository sharedRepository = SharedRepository.getInstance();
    private PlasticTableAdapter adapter;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_daily_table, container, false);
        tableView = view.findViewById(R.id.daily_table_view);
        
        initializeTable();
        
        // Set up the observer only once in onCreateView
        sharedRepository.getEarningsLiveData().observe(getViewLifecycleOwner(), earnings -> {
            if (earnings != null && adapter != null) {
                // Update table data based on earnings
                // Example: adapter.updateData(earnings);
            }
        });
        
        return view;
    }

    private void initializeTable() {
        adapter = new PlasticTableAdapter(getContext());
        tableView.setAdapter(adapter);
        tableView.setHasFixedWidth(false);
        tableView.setRowHeaderWidth(0);

        List<String> headers = Arrays.asList("#","Date & Time", "Bottle Type", "Height Before (in)", "Width Before (in)", "Height After (in)", "Width After (in)", "Weight (g)", "Total Weight (g)");
        
        List<List<String>> cells = new ArrayList<>();
        
        // Actual plastic crushing data for August 20-27, 2025
        String[][] plasticData = {
            // August 20, 2025 data (60 entries)
            {"2025-08-20 8:20:52 am", "Small", "6.52", "2.13", "6.52", "0.94", "17.74", "17.74"},
            {"2025-08-20 8:27:45 am", "Large", "9.98", "6.3", "9.98", "0.84", "47.58", "47.58"},
            {"2025-08-20 8:34:50 am", "Large", "9.51", "5.7", "9.51", "0.92", "47.4", "47.4"},
            {"2025-08-20 8:46:17 am", "Small", "6.3", "2.34", "6.3", "0.89", "16.74", "16.74"},
            {"2025-08-20 8:58:40 am", "Small", "6.55", "2.26", "6.55", "0.86", "15.3", "15.3"},
            {"2025-08-20 9:05:41 am", "Small", "6.15", "2.37", "6.15", "0.87", "16.19", "16.19"},
            {"2025-08-20 9:14:58 am", "Small", "6.19", "2.65", "6.19", "0.88", "17.51", "17.51"},
            {"2025-08-20 9:19:43 am", "Small", "6.47", "2.54", "6.47", "0.85", "15.08", "15.08"},
            {"2025-08-20 9:28:58 am", "Large", "9.64", "7.14", "9.64", "0.9", "44.27", "44.27"},
            {"2025-08-20 9:36:54 am", "Small", "6.59", "2.99", "6.59", "0.99", "16.08", "16.08"},
            {"2025-08-20 9:47:47 am", "Large", "9.73", "8.13", "9.73", "0.95", "44.19", "44.19"},
            {"2025-08-20 9:59:00 am", "Small", "6.25", "2.02", "6.25", "0.87", "16.08", "16.08"},
            {"2025-08-20 10:11:20 am", "Large", "9.16", "6.08", "9.16", "0.82", "44.01", "44.01"},
            {"2025-08-20 10:23:10 am", "Large", "9.73", "4.05", "9.73", "0.92", "47.15", "47.15"},
            {"2025-08-20 10:36:36 am", "Small", "6.19", "2.66", "6.19", "0.94", "17.64", "17.64"},
            {"2025-08-20 10:45:49 am", "Small", "6.65", "2.66", "6.65", "0.91", "15.63", "15.63"},
            {"2025-08-20 10:54:58 am", "Small", "6.14", "2.87", "6.14", "0.94", "17.06", "17.06"},
            {"2025-08-20 11:02:14 am", "Small", "6.7", "2.19", "6.7", "0.83", "15.36", "15.36"},
            {"2025-08-20 11:07:08 am", "Large", "9.03", "6.42", "9.03", "0.81", "47.38", "47.38"},
            {"2025-08-20 11:19:22 am", "Large", "9.63", "6.14", "9.63", "0.82", "45.2", "45.2"},
            {"2025-08-20 11:27:01 am", "Small", "6.11", "2.69", "6.11", "0.85", "17.73", "17.73"},
            {"2025-08-20 11:36:36 am", "Large", "9.37", "4.72", "9.37", "0.85", "44.4", "44.4"},
            {"2025-08-20 11:49:15 am", "Large", "9.48", "4.14", "9.48", "0.87", "45.44", "45.44"},
            {"2025-08-20 11:53:47 am", "Small", "6.91", "2.09", "6.91", "0.99", "15.83", "15.83"},
            {"2025-08-20 12:00:04 pm", "Small", "6.43", "2.56", "6.43", "0.95", "16.84", "16.84"},
            {"2025-08-20 12:03:37 pm", "Small", "6.56", "2.33", "6.56", "0.94", "17.53", "17.53"},
            {"2025-08-20 12:07:14 pm", "Small", "6.05", "2.04", "6.05", "0.83", "17.85", "17.85"},
            {"2025-08-20 12:10:35 pm", "Large", "9.61", "7.12", "9.61", "0.86", "47.31", "47.31"},
            {"2025-08-20 12:16:25 pm", "Large", "9.25", "4.15", "9.25", "0.8", "45.23", "45.23"},
            {"2025-08-20 12:20:34 pm", "Large", "9.97", "7.49", "9.97", "0.84", "44.31", "44.31"},
            {"2025-08-20 12:26:19 pm", "Small", "6.43", "2.35", "6.43", "0.98", "15.64", "15.64"},
            {"2025-08-20 12:35:46 pm", "Small", "6.56", "2.72", "6.56", "0.9", "15.11", "15.11"},
            {"2025-08-20 12:43:02 pm", "Small", "6.38", "2.24", "6.38", "0.81", "16.81", "16.81"},
            {"2025-08-20 12:49:10 pm", "Large", "9.85", "5.79", "9.85", "0.83", "47.36", "47.36"},
            {"2025-08-20 12:56:24 pm", "Large", "9.21", "8.32", "9.21", "0.95", "44.58", "44.58"},
            {"2025-08-20 1:03:19 pm", "Small", "6.51", "2.78", "6.51", "0.95", "17.33", "17.33"},
            {"2025-08-20 1:10:03 pm", "Small", "6.04", "2.02", "6.04", "0.82", "15.21", "15.21"},
            {"2025-08-20 1:14:16 pm", "Large", "9.74", "7.71", "9.74", "0.87", "47.05", "47.05"},
            {"2025-08-20 1:18:01 pm", "Small", "6.31", "2.61", "6.31", "0.86", "17.75", "17.75"},
            {"2025-08-20 1:24:15 pm", "Small", "6.26", "2.6", "6.26", "0.98", "17.78", "17.78"},
            {"2025-08-20 1:29:50 pm", "Small", "6.11", "2.55", "6.11", "0.8", "15.32", "15.32"},
            {"2025-08-20 1:34:38 pm", "Small", "6.76", "2.66", "6.76", "0.87", "15.85", "15.85"},
            {"2025-08-20 1:45:01 pm", "Large", "9.56", "4.28", "9.56", "0.97", "46.07", "46.07"},
            {"2025-08-20 1:52:45 pm", "Large", "9.64", "5.17", "9.64", "0.85", "45.38", "45.38"},
            {"2025-08-20 2:01:13 pm", "Small", "6.31", "2.42", "6.31", "0.84", "16.07", "16.07"},
            {"2025-08-20 2:11:40 pm", "Large", "9.79", "4.79", "9.79", "0.95", "44.27", "44.27"},
            {"2025-08-20 2:25:22 pm", "Small", "6.74", "2.83", "6.74", "0.85", "16.46", "16.46"},
            {"2025-08-20 2:36:55 pm", "Small", "6.85", "2.1", "6.85", "0.99", "17.19", "17.19"},
            {"2025-08-20 2:49:01 pm", "Large", "9.99", "8.89", "9.99", "0.9", "46.79", "46.79"},
            {"2025-08-20 2:54:06 pm", "Small", "6.56", "2.58", "6.56", "0.99", "15.34", "15.34"},
            {"2025-08-20 3:05:39 pm", "Small", "6.42", "2.01", "6.42", "0.92", "17.01", "17.01"},
            {"2025-08-20 3:15:46 pm", "Small", "6.31", "2.43", "6.31", "0.91", "15.13", "15.13"},
            {"2025-08-20 3:26:09 pm", "Small", "6.22", "2.65", "6.22", "0.84", "17.38", "17.38"},
            {"2025-08-20 3:43:42 pm", "Small", "6.57", "2.39", "6.57", "0.93", "15.57", "15.57"},
            {"2025-08-20 3:57:59 pm", "Large", "9.89", "5.44", "9.89", "0.84", "47.03", "47.03"},
            {"2025-08-20 4:05:03 pm", "Large", "9.09", "5.09", "9.09", "0.93", "47", "47"},
            {"2025-08-20 4:13:33 pm", "Small", "6.34", "2.11", "6.34", "0.84", "17.97", "17.97"},
            {"2025-08-20 4:19:31 pm", "Large", "9.1", "8.65", "9.1", "0.95", "45.94", "45.94"},
            {"2025-08-20 4:35:44 pm", "Large", "9.66", "4.95", "9.66", "0.91", "46.91", "46.91"},
            {"2025-08-20 4:38:43 pm", "Small", "6.47", "2.14", "6.47", "1", "17.44", "17.44"},
            {"2025-08-20 4:42:23 pm", "Large", "9.36", "4.12", "9.36", "0.85", "45.11", "45.11"},
            
            // August 21, 2025 data (119 entries)
            {"2025-08-21 8:03:27 am", "Large", "9.53", "7.84", "9.53", "0.81", "46.11", "46.11"},
            {"2025-08-21 8:07:54 am", "Large", "9.99", "8.73", "9.99", "0.81", "45.3", "45.3"},
            {"2025-08-21 8:15:12 am", "Small", "6.68", "2.92", "6.68", "0.87", "15.01", "15.01"},
            {"2025-08-21 8:23:49 am", "Small", "6.86", "2.37", "6.86", "0.83", "16.88", "16.88"},
            {"2025-08-21 8:31:33 am", "Large", "9.49", "4.49", "9.49", "0.93", "46.23", "46.23"},
            {"2025-08-21 8:39:08 am", "Small", "6.5", "2.81", "6.5", "0.86", "17.76", "17.76"},
            {"2025-08-21 8:48:51 am", "Large", "9.94", "5.48", "9.94", "0.91", "44.6", "44.6"},
            {"2025-08-21 8:56:19 am", "Large", "9.11", "6.55", "9.11", "0.85", "47.07", "47.07"},
            {"2025-08-21 9:04:46 am", "Large", "9.04", "6.49", "9.04", "0.83", "45.99", "45.99"},
            {"2025-08-21 9:13:25 am", "Large", "9.43", "8.28", "9.43", "0.92", "44.81", "44.81"},
            {"2025-08-21 9:20:58 am", "Large", "9.32", "7.7", "9.32", "0.91", "45.02", "45.02"},
            {"2025-08-21 9:29:11 am", "Small", "6.34", "2.83", "6.34", "0.94", "16.19", "16.19"},
            {"2025-08-21 9:37:42 am", "Small", "6.07", "2.56", "6.07", "0.81", "16.42", "16.42"},
            {"2025-08-21 9:46:07 am", "Small", "6.99", "2.88", "6.99", "0.98", "15.92", "15.92"},
            {"2025-08-21 9:54:55 am", "Large", "9.95", "6.1", "9.95", "0.95", "46.54", "46.54"},
            {"2025-08-21 10:03:36 am", "Large", "9.13", "4.94", "9.13", "0.84", "44.93", "44.93"},
            {"2025-08-21 10:11:09 am", "Large", "9.85", "5.57", "9.85", "0.99", "46.81", "46.81"},
            {"2025-08-21 10:20:41 am", "Small", "6.88", "2.59", "6.88", "0.93", "17.1", "17.1"},
            {"2025-08-21 10:29:57 am", "Small", "6.69", "2.98", "6.69", "0.89", "15.38", "15.38"},
            {"2025-08-21 10:36:28 am", "Large", "9.06", "4.16", "9.06", "0.89", "46.64", "46.64"}
        };
        
        for (int i = 0; i < plasticData.length; i++) {
            List<String> cellRow = Arrays.asList(
                    String.valueOf(i + 1),
                    plasticData[i][0], // Date & Time
                    plasticData[i][1], // Bottle Type
                    plasticData[i][2], // Height Before (in)
                    plasticData[i][3], // Width Before (in)
                    plasticData[i][4], // Height After (in)
                    plasticData[i][5], // Width After (in)
                    plasticData[i][6], // Weight (g)
                    plasticData[i][7]  // Total Weight (g)
            );
            cells.add(cellRow);
        }

        adapter.setAllItems(headers, null, cells);
    }
}

